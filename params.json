{
  "name": "Panza",
  "tagline": "react-native stateless functional UI components to get you up and running quickly",
  "body": "# panza\r\nPanza (named after Sancho Panza, from Don Quixote), is a collection of  stateless, functional ui-components for react-native, and heavily inspired by the excellent [rebass](https://github.com/jxnblk/rebass) library. \r\n\r\nThe goal with Panza is to provide a set of commonly used (mostly) functional ui components for react-native, that work well in both android and iOS environments. These components should look nice out of the box, but still offer a high degree of customization. This is achieved primarily through the use of composition. Each component is comprised of smaller components including a [Base](documentation/Base.md) component, which provides some nice shorthands to transform props into styles based upon a global configuration. A component like [TouchableRow](documentation/TouchableRow.md) may suit your needs eighty percent of the time, but in cases where you need something a bit more custom, you can construct your own row using TouchableRowCell, PrimaryText, SecondaryText, RowImage, Base, ArrowRightIcon, and any other components that you’d like.\r\n\r\nYou can see Panza in production with [Payback](http://payback.panzeo.com), an app that manages shared expenses between individuals and groups.\r\n\r\n<p>\r\n<img src='images/panza-ios-large.png' width='375px' />\r\n<img src='images/panza-android-large.png' width='360px' />\r\n</p>\r\n\r\n## Getting Started\r\n```\r\n$ npm i panza --save\r\n$ npm i react-native-vector-icons --save\r\n$ rnpm link react-native-vector-icons\r\n```\r\n\r\n## Components\r\n\r\n### Inputs\r\n* [InputRow](documentation/InputRow.md)\r\n* [InputGroup](documentation/InputGroup.md)\r\n* [InputHelpText](documentation/InputHelpText.md)\r\n* [InputToggle](documentation/InputToggle.md)\r\n* [InputPicker](documentation/InputPicker.md)\r\n* [InputDatePicker](documentation/InputDatePicker.md)\r\n* [RemovableInput](documentation/RemovableInput.md)\r\n* [AddRow](documentation/AddRow.md)\r\n* [TouchableInput](documentation/TouchableInput.md)\r\n\r\n### Rows\r\n* [TouchableRow](documentation/TouchableRow.md)\r\n* [RowSeparator](documentation/RowSeparator.md)\r\n* [RowImage](documentation/RowImage.md)\r\n* [SectionHeader](documentation/SectionHeader.md)\r\n\r\n### Navigation\r\n* [NavBar](documentation/NavBar.md)\r\n* [NavTitle](documentation/NavTitle.md)\r\n* [NavTouchableIcon](documentation/NavTouchableIcon.md)\r\n* [NavTouchableText](documentation/NavTouchableText.md)\r\n* [SubNav](documentation/SubNav.md)\r\n\r\n### Pages\r\n* [ErrorPage](documentation/ErrorPage.md)\r\n* [LoadingPage](documentation/LoadingPage.md)\r\n\r\n### Buttons\r\n* [Button](documentation/Button.md)\r\n* [PrimaryButton](documentation/PrimaryButton.md)\r\n* [WarningButton](documentation/WarningButton.md)\r\n* [ErrorButton](documentation/ErrorButton.md)\r\n* [SuccessButton](documentation/SuccessButton.md)\r\n* [NakedButton](documentation/NakedButton.md)\r\n* [VerticalButtonGroup](documentation/VerticalButtonGroup.md)\r\n\r\n### Text\r\n* [PrimaryText](documentation/PrimaryText.md)\r\n* [SecondaryText](documentation/SecondaryText.md)\r\n* [LargeText](documentation/LargeText.md)\r\n* [SubtitleText](documentation/SubtitleText.md)\r\n* [PrimaryTextInput](documentation/PrimaryTextInput.md)\r\n* [SecondaryTextInput](documentation/SecondaryTextInput.md)\r\n\r\n### Images\r\n* [FadeImage](documentation/FadeImage.md)\r\n\r\n### Icons\r\n* [Icon](documentation/Icon.md)\r\n* TouchableIcon\r\n* PlusIcon\r\n* ArrowRightIcon\r\n* CloseIcon\r\n* BackIcon\r\n* SearchIcon\r\n* MoreIcon\r\n\r\n### Base Components\r\n* [Base](documentation/Base.md)\r\n* [TextBase](documentation/TextBase.md)\r\n\r\n\r\n## Customize\r\n\r\nYou can override parts of the global configuration to provide custom colours, font sizes, scales, etc.\r\n\r\n```javascript\r\nimport { config } from 'panza'\r\n\r\nclass App extends React.Component {\r\n\r\n  static childContextTypes = {\r\n    panza: PropTypes.object\r\n  }\r\n\r\n  getChildContext() {\r\n    panza: this.state.styles\r\n  }\r\n\r\n  state = {\r\n    styles: {\r\n      colors: Object.assign(\r\n        {},\r\n        config.colors,\r\n        { primary: config.colors.red } // change the primary color from blue to red\r\n      )\r\n    }\r\n  }\r\n\r\n  // ... render your app\r\n}\r\n```\r\n\r\n## Example\r\n\r\nYou can install the example application contained within this repository.\r\n\r\n```\r\n$ git clone https://github.com/bmcmahen/panza.git\r\n$ cd panza && npm install\r\n$ react-native run-ios\r\n$ react-native run-android\r\n```\r\n\r\n## License\r\nMIT\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}